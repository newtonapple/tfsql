module Tfsql
  module Parser
    grammar TFSQL
      include Expressions

      rule statements
        first:statement rest:(osp ';'+ osp element:statement)* osp ';'? osp <Tfsql::Parser::PrefixListNode>
      end

      rule statement
        select_query
      end

      rule select_query
        select:select_clause
        sources:sources
        joins:join_clause*
        where:where_clause?
        group:group_clause?
        order:order_clause?
        limit:limit_clause?
      end

      rule select_clause
        osp select quantifiers sp from
      end

      rule quantifiers
        all_followed_by_quantifiers / quantifiers_followed_by_all
      end

      rule all_followed_by_quantifiers
        sp first:all rest:(comma element:select_quantifier)* <Tfsql::Parser::PrefixListNode>
      end

      rule quantifiers_followed_by_all
        sp first:select_quantifier rest:(comma element:select_quantifier)* last:(comma element:all)? <Tfsql::Parser::ListNode>
      end

      rule select_quantifier
        named_all / quantifier
      end

      rule named_all
        name '.' all
      end

      rule join_clause
        sp type:joins (osp '(' osp delimiter:nonempty_string osp ')')? sp source (sp on osp column_name_1:id osp '=' osp column_name_2:id)?
      end

      rule joins
        join / ljoin / rjoin / ojoin
      end

      rule where_clause
        sp where sp comparative
      end

      rule group_clause
        sp group_by sp first:quantifier rest:(comma element:quantifier)* <Tfsql::Parser::PrefixListNode>
      end

      rule order_clause
        sp order_by sp first:((column / named_field) order:order?) rest:(comma element:((column / named_field) order:order?))* <Tfsql::Parser::PrefixListNode>
      end

      rule order
        sp (asc / desc)
      end

      rule limit_clause
        sp limit sp first:num rest:(comma element:num)* <Tfsql::Parser::PrefixListNode>
      end

      rule quantifier
        field alias?
      end

      rule field
        column / nonempty_string / aggregate / named_field
      end

      rule aggregate
        name osp "(" osp first:field rest:(comma element:field)* osp ")" alias:alias? <Tfsql::Parser::PrefixListNode>
      end

      rule alias
        sp (as sp)? name
      end

      rule sources
        sp first:source rest:(comma element:source)* <Tfsql::Parser::PrefixListNode>
      end

      rule source
        nonempty_string alias?
      end
    end
  end
end